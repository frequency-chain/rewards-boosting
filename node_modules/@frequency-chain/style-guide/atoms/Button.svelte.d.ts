import type { HTMLAttributes } from 'svelte/elements';
import type { Snippet } from 'svelte';
import { type VariantProps } from 'class-variance-authority';
declare const Button: import("svelte").Component<HTMLAttributes<HTMLButtonElement | HTMLAnchorElement> & Omit<VariantProps<(props?: ({
    intent?: "filled-dark" | "filled-light" | "outlined-light" | "outlined-dark" | null | undefined;
    size?: "auto" | "xs" | "sm" | "normal" | "md" | "lg" | "full" | null | undefined;
    active?: boolean | null | undefined;
    disabled?: boolean | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string>, "defaultVariants"> & {
    href?: string;
    target?: HTMLAnchorElement["target"];
    children?: Snippet;
}, {}, "">;
type Button = ReturnType<typeof Button>;
export default Button;
